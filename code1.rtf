#include <stdio.h>\
#include <stdlib.h>\
#include <unistd.h>\
\
int customFactorial(int num) \{\
    if (num == 0 || num == 1) return 1;\
    return num * customFactorial(num - 1);\
\}\
\
void performCustomOperation(int operation, int operand1, int operand2, int *result) \{\
    switch (operation) \{\
        case 1:\
            *result = operand1 + operand2;\
            break;\
        case 2:\
            *result = operand1 - operand2;\
            break;\
        case 3:\
            *result = operand1 * operand2;\
            break;\
        case 4:\
            *result = operand1 / operand2;\
            break;\
        case 5:\
            *result = customFactorial(operand1);\
            break;\
        case 6: \{\
            int isPrime = 1;\
            for (int i = 2; i <= operand1 / 2; ++i) \{\
                if (operand1 % i == 0) \{\
                    isPrime = 0;\
                    break;\
                \}\
            \}\
            *result = isPrime;\
            break;\
        \}\
        default:\
            *result = 0;\
            break;\
    \}\
\}\
\
int main() \{\
    int customPipe[2]; // Custom pipe file descriptors\
    int customResult;\
\
    if (pipe(customPipe) == -1) \{\
        perror("ERROR. Custom pipe creation failed\\n");\
        return 1;\
    \}\
\
    int customChildPID = fork();\
\
    if (customChildPID == -1) \{\
        perror("Custom Fork failed");\
        return 1;\
    \} else if (customChildPID == 0) \{\
        close(customPipe[0]); \
\
        int operation, operand1, operand2;\
        printf("Choose an operation:\\n");\
        printf("1: Addition\\n2: Subtraction\\n3: Multiplication\\n4: Division\\n5: Custom Factorial\\n6: Check for Custom Prime\\n");\
        scanf("%d", &operation);\
\
        if (operation != 5 && operation != 6) \{\
            printf("Enter operand1: ");\
            scanf("%d", &operand1);\
            printf("Enter operand2: ");\
            scanf("%d", &operand2);\
        \} else \{\
            printf("Enter a number: ");\
            scanf("%d", &operand1);\
        \}\
\
        write(customPipe[1], &operation, sizeof(int));\
        write(customPipe[1], &operand1, sizeof(int));\
        write(customPipe[1], &operand2, sizeof(int));\
\
        close(customPipe[1]); \
    \} else \{\
        close(customPipe[1]); \
\
        int operation, operand1, operand2;\
\
        read(customPipe[0], &operation, sizeof(int));\
        read(customPipe[0], &operand1, sizeof(int));\
        read(customPipe[0], &operand2, sizeof(int));\
\
        performCustomOperation(operation, operand1, operand2, &customResult);\
\
        close(customPipe[0]); \
\
        if (operation != 6) \{\
            printf("Custom Result: %d\\n", customResult);\
        \}\
    \}\
\
    return 0;\
\}\
}
